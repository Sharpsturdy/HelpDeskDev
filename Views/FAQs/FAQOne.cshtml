@using Help_Desk_2.Utilities
@using Help_Desk_2.Models
@using Help_Desk_2.Helpers
@model Help_Desk_2.Models.KnowledgeFAQ

@{
    AllSorts.setNavProperties(ViewBag, true); //This is a single item page 

    if (ViewBag.mode == 0)
    {
        ViewBag.displayName = AllSorts.getUserDisplayName();
        ViewBag.Title = "New FAQ Article";
        ViewBag.Status = "Draft";
        ViewBag.CreationDate = String.Format("{0:d}", DateTime.Now);
    }
    else
    {
        ViewBag.Title = "FAQ: " + Model.headerText;
        ViewBag.displayName = Model.Originator.displayName;
        ViewBag.Status = Model.status;
        ViewBag.CreationDate = Html.DisplayFor(model => model.dateComposed);
    }

    if (ViewBag.mode < 2)
    {

        ViewBag.addAttachCode = "1"; //Activate attach code 
        ViewBag.addTinyMCECode = "1"; //Activate tinymce code

    }

}

@section cssCustomTop {
    @Styles.Render("~/Content/Select2/css/select2.min.css")
    @Styles.Render("~/Content/Select2/css/select2-bootstrap.min.css")
}

<div class="container-custom-top">
    <h2>@ViewBag.Title <span class="summary-top pull-right">@ViewBag.Status</span></h2>@if (ViewBag.mode > 0)
    {
        <p class="text-muted">Created by @ViewBag.displayName on @ViewBag.CreationDate. Expiry Date : @Model.expiryDate</p>
    }
</div>

<hr class="title" />


@using (Html.BeginForm(ViewBag.mode ==0? "New": "Edit", "FAQs", FormMethod.Post,
                 new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.Hidden("type",1) <!-- FAQs always have type == 1 -->
        @Html.HiddenFor(model => model.suggest)
        @Html.HiddenFor(model => model.published)
        @if (ViewBag.mode == 1)
        {
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.originatorID)
            @Html.HiddenFor(model => model.dateComposed)
            @Html.HiddenFor(model => model.expiryDate)
            @Html.HiddenFor(model => model.dateSubmitted)
        }
        
        <div class="container1">
            @if (ViewBag.mode < 2)
            { // Edit only
                <div class="panel panel-info">
                    @*Html.LabelFor(model => model.headerText, htmlAttributes: new { @class = "control-label" })*@
                    <div class="panel-heading">
                        @Html.DisplayName("Question")
                    </div>
                    <div class="panel-body1">
                        @Html.EditorFor(model => model.headerText, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.headerText, "", new { @class = "text-danger" })
                    </div>

                </div>
            }
            <div class="panel panel-info">
                <div class="panel-heading">
                    @Html.DisplayName("Answer")
                </div>
                <div class="panel-body1">
                    @if (ViewBag.mode == 2)
                    {
                        @Html.Raw(Model.description)
                    }
                    else {
                        @Html.TextAreaFor(model => model.description, new { @class = "form-control richeditor" })
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    }
                </div>

            </div>

            <!--Keywords-->
            <div class="panel panel-info">
                <div class="panel-heading">@Html.DisplayNameFor(model => model.keywords)</div>

                <div class="panel-body1">
                    @if (ViewBag.mode == 0)
                    {
                        @Html.DropDownList("inkeywords", new MultiSelectList(AllSorts.FullWordList.Where(x => x.type == 1), "ID", "Text"), new { @class = "select2-editor", multiple = "multiple" })
                    }
                    else if (ViewBag.mode == 1)
                    {
                        //Help_Desk_2.DataAccessLayer.HelpDeskContext db = new Help_Desk_2.DataAccessLayer.HelpDeskContext();

                        @Html.DropDownList("inkeywords", new MultiSelectList(AllSorts.FullWordList.Where(x => x.type == 1), "ID", "Text", Model.keywords.Select(x => x.ID)), new { @class = "select2-editor", multiple = "multiple" })

                    }
                    else
                    {
                        @String.Join(", ", Model.keywords.Select(x => x.text))
                    }
                </div>
            </div>

            <!--Expert Areas-->
            <div class="panel panel-info">
                <div class="panel-heading">@Html.DisplayNameFor(model => model.expertAreas)</div>
                <div class="panel-body1">
                    @if (ViewBag.mode == 0)
                    {
                        @Html.DropDownList("inexpertareas", new MultiSelectList(AllSorts.FullWordList.Where(x => x.type == 2), "ID", "Text"), new { @class = "select2-editor", multiple = "multiple" })
                    }
                    else if (ViewBag.mode == 1)
                    {

                        @Html.DropDownList("inexpertareas", new MultiSelectList(AllSorts.FullWordList.Where(x => x.type == 2), "ID", "Text", Model.expertAreas.Select(x => x.ID)), new { @class = "select2-editor", multiple = "multiple" })
                    }
                    else
                    {
                        @String.Join(", ", Model.expertAreas.Select(x => x.text))
                    }
                </div>
            </div>



            <!--Attachment section-->
            <div class="panel panel-info">
                <div class="panel-heading">@Html.DisplayName("Attachments")</div>
                <div>
                    @if (Model != null)
                {
                        @Html.HiddenFor(model => model.deleteField)
                        if (Model.Files != null && Model.Files.Count > 0)
                        {
                            <table class="table table-condensed">
                                <tr><th>File Name</th><th>Size</th><th></th></tr>
                                @foreach (var t in Model.Files)
                                {
                                    <tr>
                                        <td class="fileID hidden">@t.ID</td>
                                        <td>@Html.ActionLink(t.fileName, "d/" + t.ID, "Files", null, new { target = "_blank" })</td>
                                        <td>@t.displaySize</td>
                                        @if (ViewBag.mode < 2)
                                        {
                                            <td>
                                                <div tabindex="500" class="btn btn-primary btn-custom btn-custom-undelete hidden">
                                                    <i class="fa fa-undo"></i>
                                                    <span class="hidden-xs">Undelete</span>
                                                </div>

                                                <div tabindex="500" class="btn btn-primary btn-custom btn-custom-delete">
                                                    <i class="glyphicon glyphicon-trash"></i>
                                                    <span class="hidden-xs">Delete</span>
                                                </div>
                                            </td>
                                        }
                                    </tr>
                                }
                            </table>
                        }
                    }
                    @if (ViewBag.mode < 2)
                    {
                        <input type="file" name="file1" class="file" data-show-upload="false" data-show-preview="false" />
                    }
                </div>
            </div>

            <!-- Links -->
            <div class="panel panel-info">
                <div class="panel-heading">@Html.DisplayName("Links")</div>
                @Html.HiddenFor(model => model.links)

                <table class="table table-condensed links">
                    <tbody>
                        @{
                            string tmpLinks = Model == null ? null : Model.links;
                            string displayLinks = "";
                            if (!string.IsNullOrEmpty(tmpLinks))
                            {
                                var links = tmpLinks.Split(new char[] { '|' });
                                foreach (string link in links)
                                {
                                    if (!string.IsNullOrEmpty(link))
                                    {
                                        var tmp = link.Split(new char[] { '^' });
                                        displayLinks += "<tr class=\"normal\"><td><a href=\"" + tmp[1] + "\" target=\"_blank\">" + tmp[0] + "</a></td>" +
                                            "<td>" + (ViewBag.mode == 2 ? "" : "<input type=\"button\" value=\"Delete\" class=\"btn btn-default btn-custom-action\">") +
                                            "</td></tr>";
                                    }
                                }
                            }
                            @Html.Raw(displayLinks)
                        }

                    </tbody>
                    @if (ViewBag.mode < 2)
                    {
                        <tfoot>
                            <tr>
                                <td colspan="2">
                                    <div class="row add-link">
                                        <div class="col-sm-5">
                                            @Html.EditorFor(model => model.linkText, new { htmlAttributes = new { @placeholder = "Link Display Text", @class = "form-control" } })
                                        </div>

                                        <div class="col-sm-5">
                                            @Html.EditorFor(model => model.linkURL, new { htmlAttributes = new { @placeholder = "Link URL", @class = "form-control" } })
                                        </div>

                                        <div class="col-sm-1">
                                            <input type="button" id="addLink" value="Add Link" class="btn btn-default" />
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </tfoot>
                    }
                </table>
            </div>

            <div>
                <div class="btn-group btn-group-custom" style="padding-bottom:15px; padding-top:15px">
                    @if (ViewBag.mode == 2)
                    {
                        if (   (Model.status == Statuses.Draft && Model.originatorID.ToString() == AllSorts.getUserID())
                            || (Model.dateSubmitted != null && AllSorts.UserCan("ManageFAQs") && !Model.published)
                            || (Model.published && User.CustomIsInRole(UserRoles.DomainAdminRole))
                           )
                        {
                            @Html.ActionLink("Edit", "Edit/" + Model.ID, null, htmlAttributes: new { @title = "Click to modify document", @class = "btn btn-primary" })
                        }
                        <a href="@ViewBag.prevURL" title="Click to return to News home" class="btn btn-primary">Close</a>

                    }
                    else {

                        <input type="submit" name="btnSave" value="Save" class="btn btn-primary" />
                        <input type="submit" name="btnSClose" value="Save & Close" class="btn btn-primary" />
                        if (Model == null || Model.dateSubmitted == null)
                        {
                            <input type="submit" name="btnSubmit" value="Submit" class="btn btn-primary" title="Submit article for approval" />
                        }
                        if (User.CustomIsInRole(UserRoles.DomainAdminRole))
                        {
                            if (Model != null && Model.published)
                            {
                                <input type="submit" name="btnUnApprove" value="UnApprove" class="btn btn-primary" />
                            }
                            else
                            {
                                <input type="submit" name="btnApprove" value="Approve" class="btn btn-primary" />
                            }
                        }
                        <a href="@ViewBag.prevURL" title="Click to return to News home" class="btn btn-primary">Cancel</a>
                    }
                </div>
            </div>
        </div>

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Content/Select2/js/select2.min.js")
}
